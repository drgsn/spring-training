

#### H2 ####
# By design, the in-memory database is volatile, and data will be lost when we restart the application.
# We can change that behavior by using file-based storage. To do this we need to update the spring.datasource.url:
#spring.datasource.url=jdbc:h2:file:/data/demo

h2.spring.datasource.url=jdbc:h2:mem:test_h2
h2.spring.datasource.driverClassName=org.h2.Driver
h2.spring.datasource.username=sa
h2.spring.datasource.password=

# H2 database has an embedded GUI console for browsing the contents of a database and running SQL queries. By default, the H2 console is not enabled in Spring.
#spring.h2.console.enabled=true


#### MONGO #####
#spring.data.mongodb.authentication-database= # Authentication database name.
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
#spring.data.mongodb.repositories.enabled=true # Enable Mongo repositories.
#spring.data.mongodb.uri=mongodb://127.0.0.1/mongo # Mongo database URI. When set, host and port are ignored.

# Database name.
spring.data.mongodb.database=mongo

# Mongo server host.
spring.data.mongodb.host=127.0.0.1

# Login user of the mongo server.
spring.data.mongodb.username=testUser

# Login password of the mongo server.
spring.data.mongodb.password=pass

# Mongo server port.
spring.data.mongodb.port=27017

##### MYSQL #####
# because the properties for mysql are already used by h2, we define new props to be used in bean creation
mysql.spring.datasource.url=jdbc:mysql://localhost:3306/test_mysql?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
mysql.spring.datasource.username=root
mysql.spring.datasource.password=pass
mysql.spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


##### JPA ####
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

#### SWAGGER ####
springdoc.swagger-ui.path=/swagger-ui